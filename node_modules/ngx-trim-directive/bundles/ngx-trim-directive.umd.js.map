{"version":3,"file":"ngx-trim-directive.umd.js","sources":["ng://ngx-trim-directive/ngx-trim.directive.ts","ng://ngx-trim-directive/ngx-trim-directive.module.ts"],"sourcesContent":["import {\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NgControl,\n} from '@angular/forms';\n\n@Directive({\n  selector: 'input[trim],textarea[trim]',\n})\nexport class NgxTrimDirective implements OnInit, OnDestroy {\n\n  private _trim: '' | 'blur' | false;\n  @Input('trim')\n  public set trim (trimOption: '' | 'blur' | false) {\n    if (trimOption !== '' && trimOption !== 'blur' && trimOption !== false) {\n      console.warn(`Note: The value ${JSON.stringify(trimOption)} is not assignable to the trim attribute.\n        Only blank string (\"\"), \"blur\" or false is allowed.`);\n\n      this._trim = false;\n      return;\n    }\n\n    this._trim = trimOption;\n\n    const elem = this.elementRef.nativeElement;\n    const eleValue = elem.value;\n    if (trimOption !== false && eleValue !== eleValue.trim()) {\n      // initially trim the value if needed\n      NgxTrimDirective.dispatchEvent(elem, 'blur');\n    }\n  }\n\n  public get trim () {\n    return this._trim;\n  }\n\n  @Input() trimOnWriteValue = true;\n\n  private _valueAccessor: ControlValueAccessor;\n  private _writeValue: (value) => void;\n\n  constructor (\n    private elementRef: ElementRef,\n    @Optional() private ngControl: NgControl,\n  ) {\n  }\n\n  private static getCaret (el) {\n\n    return {\n      start: el.selectionStart,\n      end: el.selectionEnd,\n    };\n\n  }\n\n  private static setCaret (el, start, end) {\n\n    el.selectionStart = start;\n    el.selectionEnd = end;\n\n    el.focus();\n\n  }\n\n  private static dispatchEvent (el, eventType) {\n\n    const event = document.createEvent('Event');\n    event.initEvent(eventType, false, false);\n    el.dispatchEvent(event);\n\n  }\n\n  private static trimValue (el, value) {\n\n    el.value = value.trim();\n\n    NgxTrimDirective.dispatchEvent(el, 'input');\n\n  }\n\n  ngOnInit (): void {\n\n    if (!this.ngControl) {\n\n      console.warn('Note: The trim directive should be used with one of ngModel, formControl or formControlName directives.');\n\n      return;\n\n    }\n\n    this._valueAccessor = this.ngControl.valueAccessor;\n\n    this._writeValue = this._valueAccessor.writeValue;\n    this._valueAccessor.writeValue = (value) => {\n      const _value =\n        this.trim === false || !value || 'function' !== typeof value.trim || !this.trimOnWriteValue\n          ? value\n          : value.trim();\n\n      if (this._writeValue) {\n        this._writeValue.call(this._valueAccessor, _value);\n      }\n\n      if (value !== _value) {\n        if (this._valueAccessor['onChange']) {\n          this._valueAccessor['onChange'](_value);\n        }\n\n        if (this._valueAccessor['onTouched']) {\n          this._valueAccessor['onTouched']();\n        }\n      }\n\n    };\n\n  }\n\n  ngOnDestroy (): void {\n\n    if (this._valueAccessor && this._writeValue) {\n\n      this._valueAccessor.writeValue = this._writeValue;\n\n    }\n\n  }\n\n  @HostListener('blur', [\n    '$event.target',\n    '$event.target.value',\n  ])\n  onBlur (el: any, value: string): void {\n\n    if (this.trim === false) {\n\n      return;\n\n    }\n\n    if ((this.trim === '' || 'blur' === this.trim) && 'function' === typeof value.trim && value.trim() !== value) {\n\n      NgxTrimDirective.trimValue(el, value);\n      NgxTrimDirective.dispatchEvent(el, 'blur'); // in case updateOn is set to blur\n\n    }\n\n  }\n\n  @HostListener('input', [\n    '$event.target',\n    '$event.target.value',\n  ])\n  onInput (el: any, value: string): void {\n\n    if (this.trim === false) {\n\n      return;\n\n    }\n\n    if (this.trim === '' && 'function' === typeof value.trim && value.trim() !== value) {\n\n      let { start, end } = NgxTrimDirective.getCaret(el);\n\n      if (value[0] === ' ' && start === 1 && end === 1) {\n\n        start = 0;\n        end = 0;\n\n      }\n\n      NgxTrimDirective.trimValue(el, value);\n\n      NgxTrimDirective.setCaret(el, start, end);\n\n    }\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxTrimDirective } from './ngx-trim.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [NgxTrimDirective],\n  exports: [NgxTrimDirective],\n})\nexport class NgxTrimDirectiveModule {\n}\n"],"names":["Directive","ElementRef","NgControl","Optional","Input","HostListener","NgModule"],"mappings":";;;;;;;;;;AAAA;QAiDE,0BACU,UAAsB,EACV,SAAoB;YADhC,eAAU,GAAV,UAAU,CAAY;YACV,cAAS,GAAT,SAAS,CAAW;YAPjC,qBAAgB,GAAG,IAAI,CAAC;SAShC;QAjCD,sBACW,kCAAI;;;;YAmBf;gBACE,OAAO,IAAI,CAAC,KAAK,CAAC;aACnB;;;;;YAtBD,UACiB,UAA+B;gBAC9C,IAAI,UAAU,KAAK,EAAE,IAAI,UAAU,KAAK,MAAM,IAAI,UAAU,KAAK,KAAK,EAAE;oBACtE,OAAO,CAAC,IAAI,CAAC,qBAAmB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,+GACJ,CAAC,CAAC;oBAExD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACnB,OAAO;iBACR;gBAED,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;;oBAElB,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa;;oBACpC,QAAQ,GAAG,IAAI,CAAC,KAAK;gBAC3B,IAAI,UAAU,KAAK,KAAK,IAAI,QAAQ,KAAK,QAAQ,CAAC,IAAI,EAAE,EAAE;;oBAExD,gBAAgB,CAAC,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;iBAC9C;aACF;;;WAAA;;;;;;QAiBc,yBAAQ;;;;;QAAvB,UAAyB,EAAE;YAEzB,OAAO;gBACL,KAAK,EAAE,EAAE,CAAC,cAAc;gBACxB,GAAG,EAAE,EAAE,CAAC,YAAY;aACrB,CAAC;SAEH;;;;;;;;QAEc,yBAAQ;;;;;;;QAAvB,UAAyB,EAAE,EAAE,KAAK,EAAE,GAAG;YAErC,EAAE,CAAC,cAAc,GAAG,KAAK,CAAC;YAC1B,EAAE,CAAC,YAAY,GAAG,GAAG,CAAC;YAEtB,EAAE,CAAC,KAAK,EAAE,CAAC;SAEZ;;;;;;;QAEc,8BAAa;;;;;;QAA5B,UAA8B,EAAE,EAAE,SAAS;;gBAEnC,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC;YAC3C,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;YACzC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SAEzB;;;;;;;QAEc,0BAAS;;;;;;QAAxB,UAA0B,EAAE,EAAE,KAAK;YAEjC,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;YAExB,gBAAgB,CAAC,aAAa,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;SAE7C;;;;QAED,mCAAQ;;;QAAR;YAAA,iBAmCC;YAjCC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBAEnB,OAAO,CAAC,IAAI,CAAC,yGAAyG,CAAC,CAAC;gBAExH,OAAO;aAER;YAED,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;YAEnD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;YAClD,IAAI,CAAC,cAAc,CAAC,UAAU;;;;YAAG,UAAC,KAAK;;oBAC/B,MAAM,GACV,KAAI,CAAC,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,IAAI,UAAU,KAAK,OAAO,KAAK,CAAC,IAAI,IAAI,CAAC,KAAI,CAAC,gBAAgB;sBACvF,KAAK;sBACL,KAAK,CAAC,IAAI,EAAE;gBAElB,IAAI,KAAI,CAAC,WAAW,EAAE;oBACpB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;iBACpD;gBAED,IAAI,KAAK,KAAK,MAAM,EAAE;oBACpB,IAAI,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;wBACnC,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC;qBACzC;oBAED,IAAI,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE;wBACpC,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE,CAAC;qBACpC;iBACF;aAEF,CAAA,CAAC;SAEH;;;;QAED,sCAAW;;;QAAX;YAEE,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,WAAW,EAAE;gBAE3C,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;aAEnD;SAEF;;;;;;QAMD,iCAAM;;;;;QAJN,UAIQ,EAAO,EAAE,KAAa;YAE5B,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,EAAE;gBAEvB,OAAO;aAER;YAED,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,KAAK,UAAU,KAAK,OAAO,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,KAAK,EAAE;gBAE5G,gBAAgB,CAAC,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;gBACtC,gBAAgB,CAAC,aAAa,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;aAE5C;SAEF;;;;;;QAMD,kCAAO;;;;;QAJP,UAIS,EAAO,EAAE,KAAa;YAE7B,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,EAAE;gBAEvB,OAAO;aAER;YAED,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,UAAU,KAAK,OAAO,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,KAAK,EAAE;gBAE9E,IAAA,kCAA8C,EAA5C,gBAAK,EAAE,YAAqC;gBAElD,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,KAAK,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;oBAEhD,KAAK,GAAG,CAAC,CAAC;oBACV,GAAG,GAAG,CAAC,CAAC;iBAET;gBAED,gBAAgB,CAAC,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;gBAEtC,gBAAgB,CAAC,QAAQ,CAAC,EAAE,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;aAE3C;SAEF;;oBA5KFA,cAAS,SAAC;wBACT,QAAQ,EAAE,4BAA4B;qBACvC;;;;oBAdCC,eAAU;oBASVC,eAAS,uBAwCNC,aAAQ;;;2BA/BVC,UAAK,SAAC,MAAM;uCAwBZA,UAAK;6BA4FLC,iBAAY,SAAC,MAAM,EAAE;4BACpB,eAAe;4BACf,qBAAqB;yBACtB;8BAkBAA,iBAAY,SAAC,OAAO,EAAE;4BACrB,eAAe;4BACf,qBAAqB;yBACtB;;QA4BH,uBAAC;KA9KD;;;;;;ACdA;QAGA;SAMC;;oBANAC,aAAQ,SAAC;wBACR,OAAO,EAAE,EAAE;wBACX,YAAY,EAAE,CAAC,gBAAgB,CAAC;wBAChC,OAAO,EAAE,CAAC,gBAAgB,CAAC;qBAC5B;;QAED,6BAAC;KAND;;;;;;;;;;;;;"}